// <auto-generated />
using System;
using IPAddress.Storage.Service.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IPAddress.Storage.Service.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IPAddress.Storage.Service.DataAccess.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("UPDATED_BY");

                    b.Property<string>("Username")
                        .HasColumnType("longtext")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("USERS");
                });

            modelBuilder.Entity("IPAddress.Storage.Service.DataAccess.Models.UserIPAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("LastConnection")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_CONNECTION");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("UPDATED_AT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("UPDATED_BY");

                    b.HasKey("Id");

                    b.ToTable("USER_IP_ADRESSES");
                });

            modelBuilder.Entity("UserUserIPAddress", b =>
                {
                    b.Property<long>("UserIPAddressesId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("UserIPAddressesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("IP_ADDRESSES_OF_USERES", (string)null);
                });

            modelBuilder.Entity("UserUserIPAddress", b =>
                {
                    b.HasOne("IPAddress.Storage.Service.DataAccess.Models.UserIPAddress", null)
                        .WithMany()
                        .HasForeignKey("UserIPAddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPAddress.Storage.Service.DataAccess.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
